generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["multiSchema"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  schemas  = ["camiones", "motos", "nuevo_control", "operativos", "public", "sueldos"]
}

model camiones_operativos {
  id_op          Int                  @id @default(autoincrement())
  fecha          DateTime?            @db.Date
  turno          turnos_old?
  legajo         String?              @db.VarChar
  direccion      String?              @db.VarChar
  id_localidad   Int?
  direccion_full String?              @db.VarChar
  latitud        String?              @db.VarChar
  longitud       String?              @db.VarChar
  localidad      vicente_lopez?       @relation(fields: [id_localidad], references: [id_barrio], onDelete: NoAction, onUpdate: NoAction)
  registros      camiones_registros[]

  @@map("operativos")
  @@schema("camiones")
}

model camiones_registros {
  id                   Int                  @id @default(autoincrement())
  hora                 DateTime?            @db.Time(6)
  dominio              String?              @db.VarChar
  origen               String?              @db.VarChar
  destino              String?              @db.VarChar
  licencia             String?              @db.VarChar
  remito               Boolean?
  carga                Boolean?
  resolucion           String?              @db.VarChar
  acta                 String?              @db.VarChar
  hora_carga           DateTime?            @db.Time(6)
  mes                  Int?
  semana               Int?
  direccion_full       String?              @db.VarChar
  latitud              String?              @db.VarChar
  longitud             String?              @db.VarChar
  id_localidad_origen  Int?
  id_localidad_destino Int?
  id_motivo            Int?
  id_operativo         Int?
  lpcarga              Int?
  localidad_destino    barrios?             @relation("registros_id_localidad_destinoTobarrios", fields: [id_localidad_destino], references: [id_barrio], onDelete: NoAction, onUpdate: NoAction)
  localidad_origen     barrios?             @relation("registros_id_localidad_origenTobarrios", fields: [id_localidad_origen], references: [id_barrio], onDelete: NoAction, onUpdate: NoAction)
  motivo               motivos?             @relation(fields: [id_motivo], references: [id_motivo], onDelete: NoAction, onUpdate: NoAction)
  operativo            camiones_operativos? @relation(fields: [id_operativo], references: [id_op], onDelete: NoAction, onUpdate: NoAction)

  @@map("registros")
  @@schema("camiones")
}

model moto_motivo {
  id_registro Int
  id_motivo   Int
  motivo      motivos         @relation(fields: [id_motivo], references: [id_motivo], onDelete: NoAction, onUpdate: NoAction)
  registro    motos_registros @relation(fields: [id_registro], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@id([id_registro, id_motivo])
  @@schema("motos")
}

model motos_operativos {
  id_op           Int               @id @default(autoincrement())
  fecha           DateTime?         @db.Date
  hora            DateTime?         @db.Time(6)
  qth             String?           @db.VarChar
  legajo_a_cargo  Int?
  legajo_planilla Int?
  turno           turnos_old?
  seguridad       seguridad?
  id_zona         Int?
  direccion_full  String?           @db.VarChar
  latitud         String?           @db.VarChar
  longitud        String?           @db.VarChar
  localidad       vicente_lopez?    @relation(fields: [id_zona], references: [id_barrio], onDelete: NoAction, onUpdate: NoAction)
  registros       motos_registros[]

  @@map("operativos")
  @@schema("motos")
}

model motos_registros {
  dominio           String?           @db.VarChar
  licencia          Int?
  acta              Int?
  resolucion        resolucion?
  fechacarga        DateTime?         @db.Timestamp(6)
  lpcarga           Int?
  mes               Int?
  semana            Int?
  id                Int               @id @default(autoincrement())
  direccion_full    String?           @db.VarChar
  latitud           String?           @db.VarChar
  longitud          String?           @db.VarChar
  id_licencia       Int?
  id_zona_infractor Int?
  id_operativo      Int?
  motivos           moto_motivo[]
  tipo_licencias    tipo_licencias?   @relation(fields: [id_licencia], references: [id_tipo], onDelete: NoAction, onUpdate: NoAction, map: "fk_licencia")
  zona_infractor    barrios?          @relation(fields: [id_zona_infractor], references: [id_barrio], onDelete: NoAction, onUpdate: NoAction, map: "fk_zona_infractor")
  operativo         motos_operativos? @relation(fields: [id_operativo], references: [id_op], onDelete: NoAction, onUpdate: NoAction)

  @@map("registros")
  @@schema("motos")
}

model nuevo_control_operativos {
  id_op     Int                       @id @default(autoincrement())
  fecha     DateTime?                 @db.Date
  motivo    motivo?
  lp        Int?
  turno     turnos_old?
  registros nuevo_control_registros[]

  @@map("operativos")
  @@schema("nuevo_control")
}

model nuevo_control_registros {
  id           Int                       @id @default(autoincrement())
  hora         DateTime?                 @db.Time(6)
  dominio      String?                   @db.VarChar
  acta         String?                   @db.VarChar
  resolucion   resolucion?
  fechacarga   String?                   @db.VarChar
  lpcarga      Int?
  mes          Int?
  id_localidad Int?
  id_operativo Int?
  id_zona      Int?
  barrio       barrios?                  @relation(fields: [id_localidad], references: [id_barrio], onDelete: NoAction, onUpdate: NoAction, map: "fk_localidad")
  operativo    nuevo_control_operativos? @relation(fields: [id_operativo], references: [id_op], onDelete: NoAction, onUpdate: NoAction)
  zona         zonas?                    @relation(fields: [id_zona], references: [id_zona], onDelete: NoAction, onUpdate: NoAction)

  @@map("registros")
  @@schema("nuevo_control")
}

model zonas {
  id_zona   Int                       @id @default(autoincrement())
  zona      String?                   @db.VarChar
  registros nuevo_control_registros[]

  @@schema("nuevo_control")
}

model operativos_operativos {
  id_op           Int                    @id @default(autoincrement())
  fecha           DateTime?              @db.Date
  qth             String?                @db.VarChar
  turno           turnos_old?
  legajo_a_cargo  Int?
  legajo_planilla Int?
  id_localidad    Int?
  seguridad       seguridad?
  hora            DateTime?              @db.Time(6)
  direccion_full  String?                @db.VarChar
  latitud         String?                @db.VarChar
  longitud        String?                @db.VarChar
  localidad       vicente_lopez?         @relation(fields: [id_localidad], references: [id_barrio], onDelete: NoAction, onUpdate: NoAction)
  registros       operativos_registros[]

  @@map("operativos")
  @@schema("operativos")
}

model operativos_registros {
  dominio               String?                @db.VarChar
  licencia              BigInt?
  acta                  Int?
  resolucion            resolucion?
  fechacarga            DateTime?              @db.Timestamp(6)
  lpcarga               Int?
  mes                   Int?
  semana                Int?
  es_del                del?
  resultado             resultado?
  id                    Int                    @id @default(autoincrement())
  direccion_full        String?                @db.VarChar
  latitud               String?                @db.VarChar
  longitud              String?                @db.VarChar
  id_licencia           Int?
  id_zona_infractor     Int?
  id_operativo          Int?
  id_motivo             Int?
  graduacion_alcoholica Float?
  tipo_licencia         tipo_licencias?        @relation(fields: [id_licencia], references: [id_tipo], onDelete: NoAction, onUpdate: NoAction, map: "fk_licencia")
  zona_infractor        barrios?               @relation(fields: [id_zona_infractor], references: [id_barrio], onDelete: NoAction, onUpdate: NoAction, map: "fk_zona_infractor")
  motivo                motivos?               @relation(fields: [id_motivo], references: [id_motivo], onDelete: NoAction, onUpdate: NoAction)
  operativo             operativos_operativos? @relation(fields: [id_operativo], references: [id_op], onDelete: NoAction, onUpdate: NoAction)

  @@map("registros")
  @@schema("operativos")
}

model asd {
  id      Int     @id @default(autoincrement())
  zona    String? @db.VarChar
  id_zona Int?

  @@schema("public")
}

model barrios {
  id_barrio        Int                       @id @default(autoincrement())
  barrio           String                    @db.VarChar
  camiones_destino camiones_registros[]      @relation("registros_id_localidad_destinoTobarrios")
  camiones_origen  camiones_registros[]      @relation("registros_id_localidad_origenTobarrios")
  motos            motos_registros[]
  paseo            nuevo_control_registros[]
  autos            operativos_registros[]

  @@schema("public")
}

model mensual {
  id       Int        @id @default(autoincrement())
  mes      String?    @db.VarChar
  a_o      Int?       @map("a√±o")
  monto    Int?
  puntajes puntajes[]

  @@schema("public")
}

model motivos {
  id_motivo Int                    @id @default(autoincrement())
  motivo    String                 @db.VarChar
  camiones  camiones_registros[]
  motos     moto_motivo[]
  autos     operativos_registros[]

  @@schema("public")
}

model operario {
  legajo   Int        @id
  nombre   String?    @db.VarChar
  puntajes puntajes[]

  @@schema("public")
}

model permisos {
  id      Int       @id @default(autoincrement())
  permiso String    @db.VarChar
  url     String    @db.VarChar
  legajos legajos[]

  @@schema("public")
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model primeros {
  count BigInt?

  @@ignore
  @@schema("public")
}

model puntajes {
  id                  Int       @id @default(autoincrement())
  interaccion_publico Int?
  jerarquicos         Int?
  errores_actas       Int?
  destacado           Int?
  llamados_atencion   Int?
  asistencia          Int?
  a_percibir          Float?
  legajo              Int?
  id_mes              Int?
  mensual             mensual?  @relation(fields: [id_mes], references: [id], onDelete: NoAction, onUpdate: NoAction)
  operario            operario? @relation(fields: [legajo], references: [legajo], onDelete: NoAction, onUpdate: NoAction)

  @@schema("public")
}

model tipo_licencias {
  id_tipo  Int                    @id @default(autoincrement())
  tipo     String?                @db.VarChar
  vehiculo String?                @db.VarChar
  motos    motos_registros[]
  autos    operativos_registros[]

  @@schema("public")
}

model legajos {
  legajo   Int       @id
  turno    turnos?
  rol      roles?
  id_rol   Int?
  permisos permisos? @relation(fields: [id_rol], references: [id], onDelete: NoAction, onUpdate: NoAction)
  usuario  User?

  @@schema("public")
}

model Account {
  id                String  @id @default(cuid())
  userId            String  @map("user_id")
  type              String
  provider          String
  providerAccountId String  @map("provider_account_id")
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?
  user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
  @@map("accounts")
  @@schema("public")
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique @map("session_token")
  userId       String   @map("user_id")
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("sessions")
  @@schema("public")
}

model User {
  id            String    @id @default(cuid())
  legajo        Int       @unique
  nombre        String    @db.VarChar
  apellido      String    @db.VarChar
  user_password String    @db.VarChar(255)
  telefono      Int?
  accounts      Account[]
  sessions      Session[]
  op            legajos   @relation(fields: [legajo], references: [legajo], onDelete: NoAction, onUpdate: NoAction)

  @@map("users")
  @@schema("public")
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
  @@map("verificationtokens")
  @@schema("public")
}

model vicente_lopez {
  id_barrio Int                     @id @default(autoincrement())
  barrio    String                  @db.VarChar
  cp        String                  @db.VarChar
  camiones  camiones_operativos[]
  motos     motos_operativos[]
  autos     operativos_operativos[]

  @@schema("public")
}

model clientes {
  id_cliente Int         @id @default(autoincrement())
  cliente    String?     @db.VarChar
  recibos    recibos[]
  servicios  servicios[]

  @@schema("sueldos")
}

model operarios {
  legajo    Int                   @id
  nombre    String?               @db.VarChar
  servicios operarios_servicios[]

  @@schema("sueldos")
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model operarios_servicios {
  id          Int      @id @default(autoincrement())
  legajo      Int?
  memo        String?   @db.VarChar
  recibo      Int?
  id_servicio Int
  a_cobrar    Int?
  hora_inicio DateTime? @db.Time(6)
  hora_fin    DateTime? @db.Time(6)
  cancelado   Boolean?
  servicios   servicios @relation(fields: [id_servicio], references: [id_servicio], onDelete: NoAction, onUpdate: NoAction)
  operarios   operarios? @relation(fields: [legajo], references: [legajo], onDelete: NoAction, onUpdate: NoAction)


  @@schema("sueldos")
}

model precios {
  id     String @id @db.VarChar
  precio Int?

  @@schema("sueldos")
}

model recibos {
  recibo              Int                   @id
  fecha_recibo        DateTime?             @db.Date
  importe_recibo      Int?
  acopio              Int
  id_cliente          Int?
  clientes            clientes?             @relation(fields: [id_cliente], references: [id_cliente], onDelete: NoAction, onUpdate: NoAction)


  @@schema("sueldos")
}

model servicios {
  id_servicio         Int                   @id @default(autoincrement())
  recibo              Int?
  fecha_servicio      DateTime?             @db.Date
  importe_servicio    Int?
  memo                String?               @db.VarChar
  id_cliente          Int?
  feriado             Boolean?
  operarios_servicios operarios_servicios[]
  clientes            clientes?             @relation(fields: [id_cliente], references: [id_cliente], onDelete: NoAction, onUpdate: NoAction)

  @@schema("sueldos")
}

enum motivo {
  VELOCIDAD
  ESTACIONAMIENTO

  @@schema("nuevo_control")
}

enum del {
  VILO
  FUERA_DEL_MUNICIPIO @map("FUERA DEL MUNICIPIO")

  @@schema("operativos")
}

enum resultado {
  NEGATIVA
  PUNITIVA
  NO_PUNITIVA @map("NO PUNITIVA")

  @@schema("operativos")
}

enum tipo_vehiculo {
  Moto
  Auto
  Profesional

  @@schema("operativos")
}

enum resolucion {
  ACTA
  PREVENCION
  REMITIDO

  @@schema("public")
}

enum roles {
  INSPECTOR
  ADMIN

  @@schema("public")
}

enum seguridad {
  POLICIA
  PREFECTURA
  SECRETARIA_DE_SEGURIDAD @map("SECRETARIA DE SEGURIDAD")
  NO

  @@schema("public")
}

enum turnos {
  MA_ANA @map("MA√ëANA")
  TARDE
  NOCHE

  @@schema("public")
}

enum turnos_old {
  MA_ANA       @map("MA√ëANA")
  TARDE
  NOCHE
  ADMIN
  SE_ALAMIENTO @map("SE√ëALAMIENTO")
  OPERATIVO

  @@schema("public")
}
