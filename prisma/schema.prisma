generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["multiSchema"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  schemas  = ["camiones", "examen", "logistica", "motos", "nuevo_control", "operativos", "public", "sueldos", "waze"]
}

model camiones_operativos {
  id_op          Int                  @id @default(autoincrement())
  fecha          DateTime?            @db.Date
  turno          turnos_old?
  legajo         String?              @db.VarChar
  direccion      String?              @db.VarChar
  id_localidad   Int?
  direccion_full String?              @db.VarChar
  latitud        Float?               @db.Real
  longitud       Float?               @db.Real
  localidad      vicente_lopez?       @relation(fields: [id_localidad], references: [id_barrio], onDelete: NoAction, onUpdate: NoAction)
  registros      camiones_registros[]

  @@map("operativos")
  @@schema("camiones")
}

model camiones_registros {
  id                   Int                  @id @default(autoincrement())
  hora                 DateTime?            @db.Time(6)
  dominio              String?              @db.VarChar
  origen               String?              @db.VarChar
  destino              String?              @db.VarChar
  licencia             String?              @db.VarChar
  remito               Boolean?
  carga                Boolean?
  resolucion           String?              @db.VarChar
  acta                 String?              @db.VarChar
  hora_carga           DateTime?            @db.Time(6)
  mes                  Int?
  semana               Int?
  id_localidad_origen  Int?
  id_localidad_destino Int?
  id_motivo            Int?
  id_operativo         Int?
  lpcarga              Int?
  localidad_destino    barrios?             @relation("registros_id_localidad_destinoTobarrios", fields: [id_localidad_destino], references: [id_barrio], onDelete: NoAction, onUpdate: NoAction)
  localidad_origen     barrios?             @relation("registros_id_localidad_origenTobarrios", fields: [id_localidad_origen], references: [id_barrio], onDelete: NoAction, onUpdate: NoAction)
  motivo               motivos?             @relation(fields: [id_motivo], references: [id_motivo], onDelete: NoAction, onUpdate: NoAction)
  operativo            camiones_operativos? @relation(fields: [id_operativo], references: [id_op], onDelete: NoAction, onUpdate: NoAction)

  @@map("registros")
  @@schema("camiones")
}

model moto_motivo {
  id_registro Int
  id_motivo   Int
  motivo      motivos         @relation(fields: [id_motivo], references: [id_motivo])
  registro    motos_registros @relation(fields: [id_registro], references: [id])

  @@id([id_registro, id_motivo], map: "pk_moto_motivo")
  @@schema("motos")
}

model motos_operativos {
  id_op           Int               @id @default(autoincrement())
  fecha           DateTime?         @db.Date
  hora            DateTime?         @db.Time(6)
  qth             String?           @db.VarChar
  legajo_a_cargo  Int?
  legajo_planilla Int?
  turno           turnos_old?
  seguridad       seguridad?
  id_zona         Int?
  direccion_full  String?           @db.VarChar
  latitud         Float?            @db.Real
  longitud        Float?            @db.Real
  localidad       vicente_lopez?    @relation(fields: [id_zona], references: [id_barrio], onDelete: NoAction, onUpdate: NoAction)
  registros       motos_registros[]

  @@map("operativos")
  @@schema("motos")
}

model motos_registros {
  dominio           String?           @db.VarChar
  licencia          Int?
  acta              Int?
  resolucion        resolucion?
  fechacarga        DateTime?         @db.Timestamp(6)
  lpcarga           Int?
  mes               Int?
  semana            Int?
  id                Int               @id @default(autoincrement())
  id_licencia       Int?
  id_zona_infractor Int?
  id_operativo      Int?
  motivos           moto_motivo[]
  tipo_licencias    tipo_licencias?   @relation(fields: [id_licencia], references: [id_tipo], onDelete: NoAction, onUpdate: NoAction, map: "fk_licencia")
  zona_infractor    barrios?          @relation(fields: [id_zona_infractor], references: [id_barrio], onDelete: NoAction, onUpdate: NoAction, map: "fk_zona_infractor")
  operativo         motos_operativos? @relation(fields: [id_operativo], references: [id_op], onDelete: NoAction, onUpdate: NoAction)

  @@map("registros")
  @@schema("motos")
}

model nuevo_control_operativos {
  id_op     Int                       @id @default(autoincrement())
  fecha     DateTime?                 @db.Date
  motivo    motivo?
  lp        Int?
  turno     turnos_old?
  registros nuevo_control_registros[]

  @@map("operativos")
  @@schema("nuevo_control")
}

model nuevo_control_registros {
  id           Int                       @id @default(autoincrement())
  hora         DateTime?                 @db.Time(6)
  dominio      String?                   @db.VarChar
  acta         String?                   @db.VarChar
  resolucion   resolucion?
  fechacarga   String?                   @db.VarChar
  lpcarga      Int?
  mes          Int?
  id_localidad Int?
  id_operativo Int?
  id_zona      Int?
  barrio       barrios?                  @relation(fields: [id_localidad], references: [id_barrio], onDelete: NoAction, onUpdate: NoAction, map: "fk_localidad")
  operativo    nuevo_control_operativos? @relation(fields: [id_operativo], references: [id_op], onDelete: NoAction, onUpdate: NoAction)
  zona         zonas?                    @relation(fields: [id_zona], references: [id_zona], onDelete: NoAction, onUpdate: NoAction)

  @@map("registros")
  @@schema("nuevo_control")
}

model zonas {
  id_zona   Int                       @id @default(autoincrement())
  zona      String?                   @db.VarChar
  registros nuevo_control_registros[]

  @@schema("nuevo_control")
}

model operativos_operativos {
  id_op           Int                    @id @default(autoincrement())
  fecha           DateTime?              @db.Date
  qth             String?                @db.VarChar
  legajo_a_cargo  Int?
  legajo_planilla Int?
  id_localidad    Int?
  seguridad       seguridad?
  hora            DateTime?              @db.Time(6)
  direccion_full  String?                @db.VarChar
  latitud         Float?                 @db.Real
  longitud        Float?                 @db.Real
  turno           turnos?
  localidad       vicente_lopez?         @relation(fields: [id_localidad], references: [id_barrio], onDelete: NoAction, onUpdate: NoAction)
  registros       operativos_registros[]

  @@map("operativos")
  @@schema("operativos")
}

model operativos_registros {
  dominio               String                @db.VarChar
  licencia              Int?
  acta                  Int?
  resolucion            resolucion?           @default(PREVENCION)
  fechacarga            DateTime?             @default(now()) @db.Timestamp(6)
  lpcarga               Int?
  mes                   Int?
  semana                Int?
  es_del                del?
  resultado             resultado?
  id                    Int                   @id @default(autoincrement())
  id_licencia           Int?
  id_zona_infractor     Int
  id_operativo          Int
  id_motivo             Int?
  graduacion_alcoholica Float?                @default(0) @db.Real
  tipo_licencia         tipo_licencias?       @relation(fields: [id_licencia], references: [id_tipo], onDelete: NoAction, onUpdate: NoAction, map: "fk_licencia")
  zona_infractor        barrios               @relation(fields: [id_zona_infractor], references: [id_barrio], onDelete: NoAction, onUpdate: NoAction, map: "fk_zona_infractor")
  motivo                motivos?              @relation(fields: [id_motivo], references: [id_motivo], onDelete: NoAction, onUpdate: NoAction)
  operativo             operativos_operativos @relation(fields: [id_operativo], references: [id_op], onDelete: NoAction, onUpdate: NoAction)

  @@map("registros")
  @@schema("operativos")
}

model asd {
  id      Int     @id @default(autoincrement())
  zona    String? @db.VarChar
  id_zona Int?

  @@schema("public")
}

model barrios {
  id_barrio        Int                       @id @default(autoincrement())
  barrio           String                    @db.VarChar
  camiones_destino camiones_registros[]      @relation("registros_id_localidad_destinoTobarrios")
  camiones_origen  camiones_registros[]      @relation("registros_id_localidad_origenTobarrios")
  motos            motos_registros[]
  paseo            nuevo_control_registros[]
  autos            operativos_registros[]

  @@schema("public")
}

model mensual {
  id       Int        @id @default(autoincrement())
  mes      String?    @db.VarChar
  a_o      Int?       @map("a√±o")
  monto    Int?
  puntajes puntajes[]

  @@schema("public")
}

model motivos {
  id_motivo Int                    @id @default(autoincrement())
  motivo    String                 @db.VarChar
  camiones  camiones_registros[]
  motos     moto_motivo[]
  autos     operativos_registros[]

  @@schema("public")
}

model operario {
  legajo   Int        @id
  nombre   String?    @db.VarChar
  puntajes puntajes[]

  @@schema("public")
}

model permisos {
  id      Int       @id @default(autoincrement())
  permiso String    @db.VarChar
  url     String    @db.VarChar
  legajos legajos[]

  @@schema("public")
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model primeros {
  count BigInt?

  @@ignore
  @@schema("public")
}

model puntajes {
  id                  Int       @id @default(autoincrement())
  interaccion_publico Int?
  jerarquicos         Int?
  errores_actas       Int?
  destacado           Int?
  llamados_atencion   Int?
  asistencia          Int?
  a_percibir          Float?
  legajo              Int?
  id_mes              Int?
  mensual             mensual?  @relation(fields: [id_mes], references: [id], onDelete: NoAction, onUpdate: NoAction)
  operario            operario? @relation(fields: [legajo], references: [legajo], onDelete: NoAction, onUpdate: NoAction)

  @@schema("public")
}

model tipo_licencias {
  id_tipo  Int                    @id @default(autoincrement())
  tipo     String?                @db.VarChar
  vehiculo String?                @db.VarChar
  motos    motos_registros[]
  autos    operativos_registros[]

  @@schema("public")
}

model legajos {
  legajo   Int       @id
  turno    turnos?
  rol      roles?
  id_rol   Int?
  permisos permisos? @relation(fields: [id_rol], references: [id])
  usuario  User?

  @@schema("public")
}

model Account {
  id                String  @id @default(cuid())
  userId            String  @map("user_id")
  type              String
  provider          String
  providerAccountId String  @map("provider_account_id")
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?
  user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
  @@map("accounts")
  @@schema("public")
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique @map("session_token")
  userId       String   @map("user_id")
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("sessions")
  @@schema("public")
}

model User {
  id            String    @id @default(cuid())
  legajo        Int       @unique
  nombre        String    @db.VarChar
  apellido      String    @db.VarChar
  user_password String    @db.VarChar(255)
  telefono      Int?
  accounts      Account[]
  sessions      Session[]
  op            legajos   @relation(fields: [legajo], references: [legajo])

  @@map("users")
  @@schema("public")
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
  @@map("verificationtokens")
  @@schema("public")
}

model vicente_lopez {
  id_barrio Int                     @id @default(autoincrement())
  barrio    String                  @db.VarChar
  cp        String                  @db.VarChar
  camiones  camiones_operativos[]
  motos     motos_operativos[]
  autos     operativos_operativos[]

  @@schema("public")
}

model clientes {
  id_cliente Int         @id @default(autoincrement())
  cliente    String?     @db.VarChar
  recibos    recibos[]
  servicios  servicios[]

  @@schema("sueldos")
}

model operarios {
  legajo    Int                   @id
  nombre    String?               @db.VarChar
  servicios operarios_servicios[]

  @@schema("sueldos")
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model operarios_servicios {
  legajo      Int?
  memo        String?    @db.VarChar
  recibo      Int?
  id_servicio Int
  a_cobrar    Int?
  hora_inicio DateTime?  @db.Time(6)
  hora_fin    DateTime?  @db.Time(6)
  cancelado   Boolean?
  id          Int        @id @default(autoincrement())
  servicios   servicios  @relation(fields: [id_servicio], references: [id_servicio], onDelete: NoAction, onUpdate: NoAction)
  operarios   operarios? @relation(fields: [legajo], references: [legajo], onDelete: NoAction, onUpdate: NoAction)

  @@schema("sueldos")
}

model precios {
  id     String @id @db.VarChar
  precio Int

  @@schema("sueldos")
}

model recibos {
  recibo         Int       @id
  fecha_recibo   DateTime? @db.Date
  importe_recibo Int?
  acopio         Int
  id_cliente     Int?
  clientes       clientes? @relation(fields: [id_cliente], references: [id_cliente], onDelete: NoAction, onUpdate: NoAction)

  @@schema("sueldos")
}

model servicios {
  id_servicio         Int                   @id @default(autoincrement())
  fecha_servicio      DateTime?             @db.Date
  importe_servicio    Int?
  memo                String?               @db.VarChar
  id_cliente          Int?
  feriado             Boolean?
  operarios_servicios operarios_servicios[]
  clientes            clientes?             @relation(fields: [id_cliente], references: [id_cliente], onDelete: NoAction, onUpdate: NoAction)

  @@schema("sueldos")
}

model dependencia {
  id_dependencia Int     @id @default(autoincrement())
  dependencia    String? @db.VarChar
  movil          movil[]
  uso            uso[]

  @@schema("logistica")
}

model kilometraje_vehiculos {
  id                          Int       @id @default(autoincrement())
  patente                     String
  fecha                       DateTime? @db.Date
  km                          Int?
  kit_poly_v                  Int?
  proximo_cambio_poly_v       Int?
  kit_distribucion            Int?
  proximo_cambio_distribucion Int?
  filtro_aceite               Int?
  proximo_cambio_filtro       Int?
  movil                       movil     @relation(fields: [patente], references: [patente])

  @@schema("logistica")
}

model movil {
  patente               String                  @id @db.VarChar
  marca                 String                  @db.VarChar
  nro_movil             String                  @db.VarChar
  modelo                String                  @db.VarChar
  a_o                   Int                     @map("a√±o")
  tipo_combustible      String?                 @db.VarChar
  id_uso                Int?
  tipo_motor            Float?
  empresa_seguimiento   String?                 @db.VarChar
  plan_renovacion       Boolean                 @default(false)
  id_tipo_vehiculo      Int
  id_dependencia        Int
  no_chasis             String?                 @db.VarChar
  id_megatrans          String?                 @db.VarChar
  seguro                String?                 @db.VarChar
  kilometraje_vehiculos kilometraje_vehiculos[]
  dependencia           dependencia             @relation(fields: [id_dependencia], references: [id_dependencia])
  tipo_vehiculo         logistica_tipo_vehiculo @relation(fields: [id_tipo_vehiculo], references: [id_tipo])
  uso                   uso?                    @relation(fields: [id_uso], references: [id_uso])
  reparaciones          reparaciones[]
  vtv                   vtv[]

  @@schema("logistica")
}

model proveedor {
  id                Int               @id @default(autoincrement())
  nombre            String?           @db.VarChar
  tipo              String?           @db.VarChar
  marcas            String?           @db.VarChar
  ciudad            String?           @db.VarChar
  provincia         String?           @db.VarChar
  email             String?           @db.VarChar
  email_alternativo String?           @db.VarChar
  direccion         String?           @db.VarChar
  telefono          String?           @db.VarChar
  horarios          String?           @db.VarChar
  suministro        pedido_repuesto[]

  @@schema("logistica")
}

model reparaciones {
  id          Int       @id @default(autoincrement())
  fecha       DateTime? @db.Date
  concepto    String?   @db.VarChar
  estado      String?   @db.VarChar
  articulo    Int       @unique
  patente     String    @db.VarChar
  retira      String?   @db.VarChar
  observacion String?   @db.VarChar
  repuesto    repuesto  @relation(fields: [articulo], references: [id])
  movil       movil     @relation(fields: [patente], references: [patente])

  @@schema("logistica")
}

model uso {
  id_uso         Int         @id @default(autoincrement())
  uso            String?     @db.VarChar
  id_dependencia Int
  movil          movil[]
  dependencia    dependencia @relation(fields: [id_dependencia], references: [id_dependencia])

  @@schema("logistica")
}

model pedido_repuesto {
  id            Int        @id @default(autoincrement())
  fecha_pedido  DateTime?  @db.Date
  fecha_entrega DateTime?  @db.Date
  id_proveedor  Int
  orden_compra  String     @db.VarChar
  proveedor     proveedor  @relation(fields: [id_proveedor], references: [id])
  repuestos     repuesto[]

  @@schema("logistica")
}

model repuesto {
  id               Int             @id @default(autoincrement())
  id_tipo_repuesto Int
  item             String          @db.VarChar
  id_pedido        Int
  reparacion       reparaciones?
  pedido_repuesto  pedido_repuesto @relation(fields: [id_pedido], references: [id], map: "repuesto_id_pedido_fkey")
  tipo_repuesto    tipo_repuesto   @relation(fields: [id_tipo_repuesto], references: [id_tipo_repuesto])

  @@schema("logistica")
}

model tipo_repuesto {
  id_tipo_repuesto Int        @id @default(autoincrement())
  tipo             String     @db.VarChar
  repuestos        repuesto[]

  @@schema("logistica")
}

model logistica_tipo_vehiculo {
  id_tipo Int     @id @default(autoincrement())
  tipo    String? @db.VarChar
  movil   movil[]

  @@map("tipo_vehiculo")
  @@schema("logistica")
}

model vtv {
  id            Int       @id @default(autoincrement())
  patente       String    @db.VarChar
  nro_movil     String?   @db.VarChar
  fecha_emision DateTime? @db.Date
  observacion   String?   @db.VarChar
  vencimiento   DateTime? @db.Date
  condicion     String?   @db.VarChar
  estado        String?   @db.VarChar
  movil         movil     @relation(fields: [patente], references: [patente], onDelete: NoAction, onUpdate: NoAction)

  @@schema("logistica")
}

model calles {
  id        Int         @id @default(autoincrement())
  calles    String      @db.VarChar
  recorrido recorrido[]

  @@schema("waze")
}

model dia {
  id      Int       @id @default(autoincrement())
  fecha   DateTime  @db.Date
  reporte reporte[]

  @@schema("waze")
}

model horarios {
  id      Int       @id @default(autoincrement())
  horario DateTime  @db.Time(6)
  reporte reporte[]

  @@schema("waze")
}

model nivel_trafico {
  id        Int         @id @default(autoincrement())
  nivel     String      @db.VarChar
  recorrido recorrido[]

  @@schema("waze")
}

model recorrido {
  id             Int           @id @default(autoincrement())
  id_calles      Int
  id_reporte     Int
  tiempo         Int
  tiempo_hist    Int
  velocidad      Int
  velocidad_hist Int
  id_trafico     Int
  calles         calles        @relation(fields: [id_calles], references: [id], onDelete: NoAction, onUpdate: NoAction)
  reporte        reporte       @relation(fields: [id_reporte], references: [id], onDelete: NoAction, onUpdate: NoAction)
  nivel_trafico  nivel_trafico @relation(fields: [id_trafico], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@schema("waze")
}

model reporte {
  id         Int         @id @default(autoincrement())
  id_horario Int
  id_dia     Int
  recorrido  recorrido[]
  dia        dia         @relation(fields: [id_dia], references: [id], onDelete: NoAction, onUpdate: NoAction)
  horarios   horarios    @relation(fields: [id_horario], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@schema("waze")
}

model examen {
  id            Int            @id @default(autoincrement())
  clave         String         @db.VarChar
  fecha         DateTime?      @default(now()) @db.Date
  habilitado    Boolean        @default(false)
  hora          DateTime?      @default(now()) @db.Time(6)
  terminado     Boolean?       @default(false)
  alumnos       rinde_examen[]
  hora_iniciado DateTime?      @db.Timestamp(6)

  @@unique([fecha, hora])
  @@schema("examen")
}

model calificacion {
  nota      String         @id
  resultado String
  alumnos   rinde_examen[]

  @@schema("examen")
}

model tipo_examen {
  id                 Int            @id @default(autoincrement())
  tipo               String?        @db.VarChar
  cantidad_preguntas Int
  cantidad_temas     Int
  preguntas          preguntas[]
  rinde_examen       rinde_examen[]

  @@schema("examen")
}

model rinde_examen {
  id               String             @id @default(cuid())
  id_examen        Int
  nota             String?
  nombre           String?            @db.VarChar
  apellido         String?            @db.VarChar
  email            String?            @db.VarChar
  dni              Int
  utilizado        Boolean            @default(false)
  tipo_examenId    Int?
  hora_finalizado  DateTime?          @db.Timestamp(6)
  hora_ingresado   DateTime?          @db.Timestamp(6)
  examen_preguntas examen_preguntas[]
  examen           examen             @relation(fields: [id_examen], references: [id], onDelete: NoAction, onUpdate: NoAction)
  calificacion     calificacion?      @relation(fields: [nota], references: [nota], onDelete: NoAction, onUpdate: NoAction)
  tipo_examen      tipo_examen?       @relation(fields: [tipo_examenId], references: [id])

  @@unique([id_examen, dni])
  @@schema("examen")
}

model examen_preguntas {
  examen_id    String
  preguntas_id Int
  elegida_id   Int?
  elegida      opciones?    @relation(fields: [elegida_id], references: [id])
  examen       rinde_examen @relation(fields: [examen_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  pregunta     preguntas    @relation(fields: [preguntas_id], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@id([examen_id, preguntas_id])
  @@schema("examen")
}

model opciones {
  id          Int                @id @default(autoincrement())
  respuesta   String             @db.VarChar
  id_pregunta Int
  elegidas    examen_preguntas[]
  pregunta    preguntas          @relation("opciones_id_preguntaTopreguntas", fields: [id_pregunta], references: [id], onDelete: NoAction, onUpdate: NoAction)
  correctas   preguntas[]        @relation("preguntas_correctaToopciones")

  @@schema("examen")
}

model preguntas {
  id               Int                @id @default(autoincrement())
  pregunta         String             @db.VarChar
  id_correcta      Int?
  tipo_examenId    Int?
  examen_preguntas examen_preguntas[]
  opciones         opciones[]         @relation("opciones_id_preguntaTopreguntas")
  correcta         opciones?          @relation("preguntas_correctaToopciones", fields: [id_correcta], references: [id], onDelete: NoAction, onUpdate: NoAction)
  tipo_examen      tipo_examen?       @relation(fields: [tipo_examenId], references: [id])

  @@schema("examen")
}

model baches {
  id               Int       @id @default(autoincrement())
  fecha            DateTime  @db.Timestamp(6)
  qth              String    @db.VarChar
  latitud          Float     @db.Real
  longitud         Float     @db.Real
  reparado         Boolean   @default(false)
  fecha_reparacion DateTime? @db.Timestamp(6)

  @@schema("waze")
}

enum motivo {
  VELOCIDAD
  ESTACIONAMIENTO

  @@schema("nuevo_control")
}

enum del {
  VILO
  FUERA_DEL_MUNICIPIO @map("FUERA DEL MUNICIPIO")

  @@schema("operativos")
}

enum resultado {
  NEGATIVA
  PUNITIVA
  NO_PUNITIVA @map("NO PUNITIVA")

  @@schema("operativos")
}

enum tipo_vehiculo {
  Moto
  Auto
  Profesional

  @@schema("operativos")
}

enum resolucion {
  ACTA
  PREVENCION
  REMITIDO

  @@schema("public")
}

enum roles {
  INSPECTOR
  ADMIN

  @@schema("public")
}

enum seguridad {
  POLICIA
  PREFECTURA
  SECRETARIA_DE_SEGURIDAD @map("SECRETARIA DE SEGURIDAD")
  NO

  @@schema("public")
}

enum turnos {
  MA_ANA @map("MA√ëANA")
  TARDE
  NOCHE

  @@schema("public")
}

enum turnos_old {
  MA_ANA       @map("MA√ëANA")
  TARDE
  NOCHE
  ADMIN
  SE_ALAMIENTO @map("SE√ëALAMIENTO")
  OPERATIVO

  @@schema("public")
}
